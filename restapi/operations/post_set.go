package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostSetHandlerFunc turns a function with the right signature into a post set handler
type PostSetHandlerFunc func(PostSetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostSetHandlerFunc) Handle(params PostSetParams) middleware.Responder {
	return fn(params)
}

// PostSetHandler interface for that can handle valid post set params
type PostSetHandler interface {
	Handle(PostSetParams) middleware.Responder
}

// NewPostSet creates a new http.Handler for the post set operation
func NewPostSet(ctx *middleware.Context, handler PostSetHandler) *PostSet {
	return &PostSet{Context: ctx, Handler: handler}
}

/*PostSet swagger:route POST /set postSet

Create or Update the query or nodes for a set

*/
type PostSet struct {
	Context *middleware.Context
	Handler PostSetHandler
}

func (o *PostSet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostSetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
