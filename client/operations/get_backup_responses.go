package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/choria-io/pdbproxy/models"
)

// GetBackupReader is a Reader for the GetBackup structure.
type GetBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetBackupOK creates a GetBackupOK with default headers values
func NewGetBackupOK() *GetBackupOK {
	return &GetBackupOK{}
}

/*GetBackupOK handles this case with default header values.

Basic successful request
*/
type GetBackupOK struct {
	Payload *models.SuccessModel
}

func (o *GetBackupOK) Error() string {
	return fmt.Sprintf("[GET /backup][%d] getBackupOK  %+v", 200, o.Payload)
}

func (o *GetBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupInternalServerError creates a GetBackupInternalServerError with default headers values
func NewGetBackupInternalServerError() *GetBackupInternalServerError {
	return &GetBackupInternalServerError{}
}

/*GetBackupInternalServerError handles this case with default header values.

Standard Error Format
*/
type GetBackupInternalServerError struct {
	Payload *models.ErrorModel
}

func (o *GetBackupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /backup][%d] getBackupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
