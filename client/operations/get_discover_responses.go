package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/choria-io/discovery_proxy/models"
)

// GetDiscoverReader is a Reader for the GetDiscover structure.
type GetDiscoverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiscoverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDiscoverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDiscoverBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDiscoverOK creates a GetDiscoverOK with default headers values
func NewGetDiscoverOK() *GetDiscoverOK {
	return &GetDiscoverOK{}
}

/*GetDiscoverOK handles this case with default header values.

Basic successful discovery request
*/
type GetDiscoverOK struct {
	Payload *models.DiscoverySuccessModel
}

func (o *GetDiscoverOK) Error() string {
	return fmt.Sprintf("[GET /discover][%d] getDiscoverOK  %+v", 200, o.Payload)
}

func (o *GetDiscoverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DiscoverySuccessModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoverBadRequest creates a GetDiscoverBadRequest with default headers values
func NewGetDiscoverBadRequest() *GetDiscoverBadRequest {
	return &GetDiscoverBadRequest{}
}

/*GetDiscoverBadRequest handles this case with default header values.

Standard Error Format
*/
type GetDiscoverBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetDiscoverBadRequest) Error() string {
	return fmt.Sprintf("[GET /discover][%d] getDiscoverBadRequest  %+v", 400, o.Payload)
}

func (o *GetDiscoverBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
