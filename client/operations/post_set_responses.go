package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/choria-io/pdbproxy/models"
)

// PostSetReader is a Reader for the PostSet structure.
type PostSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostSetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSetOK creates a PostSetOK with default headers values
func NewPostSetOK() *PostSetOK {
	return &PostSetOK{}
}

/*PostSetOK handles this case with default header values.

Basic successful request
*/
type PostSetOK struct {
	Payload *models.SuccessModel
}

func (o *PostSetOK) Error() string {
	return fmt.Sprintf("[POST /set][%d] postSetOK  %+v", 200, o.Payload)
}

func (o *PostSetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSetBadRequest creates a PostSetBadRequest with default headers values
func NewPostSetBadRequest() *PostSetBadRequest {
	return &PostSetBadRequest{}
}

/*PostSetBadRequest handles this case with default header values.

Standard Error Format
*/
type PostSetBadRequest struct {
	Payload *models.ErrorModel
}

func (o *PostSetBadRequest) Error() string {
	return fmt.Sprintf("[POST /set][%d] postSetBadRequest  %+v", 400, o.Payload)
}

func (o *PostSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSetInternalServerError creates a PostSetInternalServerError with default headers values
func NewPostSetInternalServerError() *PostSetInternalServerError {
	return &PostSetInternalServerError{}
}

/*PostSetInternalServerError handles this case with default header values.

Standard Error Format
*/
type PostSetInternalServerError struct {
	Payload *models.ErrorModel
}

func (o *PostSetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /set][%d] postSetInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
