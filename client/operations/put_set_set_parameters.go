package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/choria-io/pdbproxy/models"
)

// NewPutSetSetParams creates a new PutSetSetParams object
// with the default values initialized.
func NewPutSetSetParams() *PutSetSetParams {
	var ()
	return &PutSetSetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutSetSetParamsWithTimeout creates a new PutSetSetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutSetSetParamsWithTimeout(timeout time.Duration) *PutSetSetParams {
	var ()
	return &PutSetSetParams{

		timeout: timeout,
	}
}

// NewPutSetSetParamsWithContext creates a new PutSetSetParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutSetSetParamsWithContext(ctx context.Context) *PutSetSetParams {
	var ()
	return &PutSetSetParams{

		Context: ctx,
	}
}

// NewPutSetSetParamsWithHTTPClient creates a new PutSetSetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutSetSetParamsWithHTTPClient(client *http.Client) *PutSetSetParams {
	var ()
	return &PutSetSetParams{
		HTTPClient: client,
	}
}

/*PutSetSetParams contains all the parameters to send to the API endpoint
for the put set set operation typically these are written to a http.Request
*/
type PutSetSetParams struct {

	/*NewSet
	  Set Properties

	*/
	NewSet *models.Set
	/*Set
	  Node set to retrieve

	*/
	Set string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put set set params
func (o *PutSetSetParams) WithTimeout(timeout time.Duration) *PutSetSetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put set set params
func (o *PutSetSetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put set set params
func (o *PutSetSetParams) WithContext(ctx context.Context) *PutSetSetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put set set params
func (o *PutSetSetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put set set params
func (o *PutSetSetParams) WithHTTPClient(client *http.Client) *PutSetSetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put set set params
func (o *PutSetSetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNewSet adds the newSet to the put set set params
func (o *PutSetSetParams) WithNewSet(newSet *models.Set) *PutSetSetParams {
	o.SetNewSet(newSet)
	return o
}

// SetNewSet adds the newSet to the put set set params
func (o *PutSetSetParams) SetNewSet(newSet *models.Set) {
	o.NewSet = newSet
}

// WithSet adds the set to the put set set params
func (o *PutSetSetParams) WithSet(set string) *PutSetSetParams {
	o.SetSet(set)
	return o
}

// SetSet adds the set to the put set set params
func (o *PutSetSetParams) SetSet(set string) {
	o.Set = set
}

// WriteToRequest writes these params to a swagger request
func (o *PutSetSetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.NewSet == nil {
		o.NewSet = new(models.Set)
	}

	if err := r.SetBodyParam(o.NewSet); err != nil {
		return err
	}

	// path param set
	if err := r.SetPathParam("set", o.Set); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
